<?php
/**
 * URL Shortener - main module file. All hooks go here.
 */

/**
 * Implements hook_init().
 */
function urlshort_init() {
  // Check if the request is for a URL expansion, or a page on the site, e.g.
  // the main form, or a Drupal admin page.

  var_dump($_SERVER);


  // If the requested page contains a /, go straight to the Drupal domain.
  if (strpos($_GET['q'], '/') !== FALSE) {

  }

  //Easiest way is to lookup the code
  // and if there's no match, forward to the Drupal site.




}

/**
 * Implements hook_menu().
 */
function urlshort_menu() {
  $items['shorten'] = array(
    'title' => 'Shorten URL',
    'description' => t("Go here to shorten a URL."),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('urlshort_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['shorten/ajax'] = array(
    'page callback' => 'urlshort_ajax',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Main form for shortening URLs.
 *
 * @return array
 */
function urlshort_form() {
  $form['long_url'] = array(
    '#type' => 'textfield',
    '#title' => t("Long URL"),
    '#description' => t("Paste your embarrassingly long URL here and click Go."),
  );
  $form['go'] = array(
    '#type' => 'button',
    '#value' => t("Go"),
  );
  $form['short_url'] = array(
    '#type' => 'textfield',
    '#title' => t("Short URL"),
    '#description' => t("Copy your short and cute URL from here."),
  );
  $form['#attached']['js'][] = drupal_get_path('module', 'urlshort') . '/urlshort.js';
  return $form;
}

/**
 * Increments the provided code.
 *
 * @param string $code
 * @return string
 */
function urlshort_inc_code($code) {
  // Simple base-62 number system, typical for this use case.
  $digits = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  $last_digit = $digits[strlen($digits) - 1];
  // Find digit to increment:
  $found = FALSE;
  $code_len = strlen($code);
  $n = $code_len - 1;
  while ($n >= 0) {
    $ch = $code[$n];
    if ($ch != $last_digit) {
      $found = TRUE;
      break;
    }
    $n--;
  }

  if ($found) {
    // Get the integer equivalent of the current character at position $n.
    $x = strpos($digits, $ch);
    // Next digit.
    $new_digit = $digits[$x + 1];
    // Assemble new code.
    $new_code = substr($code, 0, $n) . $new_digit . str_repeat('0', $code_len - $n - 1);
  }
  else {
    // Increase code length by 1.
    $new_code = '1' . str_repeat('0', $code_len);
  }

  return $new_code;
}

/**
 * AJAX callback for URL shortening.
 */
function urlshort_ajax() {
  // Grab the URL from the query string.
  // Won't sanitise here, to preserve the provided URL - Drupal's DB API will
  // protect the database when we insert the URL later.
  $url = !empty($_GET['url']) ? $_GET['url'] : FALSE;

  // Check a URL was provided.
  if (!$url) {
    // Return JSON.
    echo json_encode(array('error' => t("Missing URL")));
    return;
  }

  // We will, however, check it's actually a URL.
  $url_info = @parse_url($url);
  if (!$url_info) {
    // Return JSON.
    echo json_encode(array('error' => t("Invalid URL")));
    return;
  }

  // Did we already do this one?
  $code = db_select('urlshort', 'u')
    ->fields('u', array('code'))
    ->condition('url', $url)
    ->execute()
    ->fetchField();
  if ($code) {
    // Yes, we did.
    echo json_encode(array('code' => $code));
    return;
  }

  // Get the latest code.
  $last_code = db_query('select code from urlshort order by id desc limit 1')
    ->fetchField();

  // Get the next code.
  if (!$last_code) {
    // First one! Should only happen once.
    $code = '1';
  }
  else {
    // Add 1 to last code.
    $code = urlshort_inc_code($last_code);
  }

  // Add it to the database.
  db_insert('urlshort')
    ->fields(array(
      'code' => $code,
      'url' => $url,
    ))
    ->execute();

  echo json_encode(array('code' => $code));
}
